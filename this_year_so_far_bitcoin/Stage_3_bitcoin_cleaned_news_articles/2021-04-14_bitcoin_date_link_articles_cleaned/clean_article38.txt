the bitcoin optech newsletter provides readers with a toplevel summary of the most important technical news happening in bitcoin along with resources that help them learn more to help our readers stay uptodate with bitcoin were republishing the latest issue of this newsletter below remember to subscribe to receive this content straight to your inboxthis week’s newsletter summarizes recent progress on code to activate taproot and contains our regular sections with descriptions of a recent bitcoin core pr review club meeting and notable changes to popular bitcoin infrastructure softwarenewstaproot activation discussion since our last update on discussion about activation methods for the taproot soft fork in newsletter  the speedy trial proposal became the focus of attention among those interested in activation prs were opened for two variants of it  using a variation on  and  using a modification that became part of  the main technical difference between these prs is how their start and stop points were specified  uses median time past mtp  uses the height of the current blockmtp is normally roughly consistent between bitcoin’s main network mainnet and its various test networks such as testnet the default signet and various independent signets this allows multiple networks to share a single set of activation parameters even if they have vastly different block heights minimizing the work of keeping those networks’ users in sync with mainnet’s consensus changesunfortunately mtp can be easily manipulated in small ways by a small number of miners and in large ways by a majority of hash rate it can also revert to an earlier time even by accident during a block chain reorganization by comparison heights can only decrease in extraordinary  that generally allows reviewers to make the simplifying assumption that height will only ever increase making it easier to analyze heightbased activation mechanisms than mtp mechanismsthese tradeoffs between the two proposals among other concerns created an impasse that some developers thought was preventing either pr from receiving additional review and ultimately getting one of them merged into bitcoin core that impasse was resolved to the satisfaction of some participants in the activation discussion when the authors of the two prs agreed to a compromiseto use mtp for the time when nodes begin counting blocks signaling for the soft fork with counting starting at the beginning of the next  retarget period after the start time this is identical to the way  versionbits and  uasf started counting blocks for the soft forks they helped activate to also use mtp for the time when nodes stop counting block signaling for a soft fork that hasn’t locked in yet however in a difference from  the mtp stop time is only checked at the end of retarget periods where counting was performed this removes the ability for an activation attempt to go directly from started to failed simplifying analysis and guaranteeing that there will be at least one complete  block period where miners can signal for activation to use height for the minimum activation parameter this further simplifies analysis and also remains compatible with the goal of allowing multiple test networks to share activation parameters even though height may differ on those networks they can all use a minimum activation height of  to activate within the window defined by mtpalthough some discussion participants expressed their displeasure with the compromise proposal its implementation has now received reviews or expressions of support from over a dozen active contributors to bitcoin core and the maintainers of two other full node implementations btcd and libbitcoin we hope this momentum to activate taproot continues and we’ll be able to report additional progress in a future newsletterbitcoin core pr review clubin this monthly section we summarize a recent bitcoin core pr review club meeting highlighting some of the important questions and answers click on a question below to see a summary of the answer from the meetingintroduce deploymentstatus is a pr  by anthony towns that proposes three helper functions to make it easier to bury future deployments without changing all the code paths that check a soft fork’s activation status deploymentenabled to test if a deployment can be active deploymentactiveat to check if a deployment should be enforced in the given block and deploymentactiveafter to know if a deployment should be enforced in the following block all three work with both buried deployments and version bits deploymentsthe review club discussion focused on understanding the change and its potential benefitswhat are the advantages of a  buried deployment over a  version bits deploymenta buried deployment simplifies the deployment logic by replacing the test that governs enforcement with simple height checks thereby reducing the technical debt associated with deployment of those consensus changeshow many buried deployments are enumerated by this prfive height in coinbase cltv checklocktimeverify strict der signatures csv opchecksequenceverify and segwit they are listed in the burieddeployment enumerator proposed by the pr in  one could argue that the satoshiera soft forks are also buriedhow many version bits deployments are currently definedtwo testdummy and schnorrtaproot bips  enumerated in the codebase in if the taproot soft fork is activated and we later want to bury that activation method what changes would need to be made to bitcoin core if this pr is mergedthe main change would be greatly simplified compared to the current code move the deploymenttaproot line from the deploymentpos enumerator to the burieddeployment one most importantly no validation logic would need to be changednotable code and documentation changesnotable changes this week in bitcoin core clightning eclair lnd rustlightning  hardware wallet interface hwi rust bitcoin btcpay server bitcoin improvement proposals bips and lightning boltsbitcoin core  adds a network field to the getnodeaddresses rpc to help identify nodes on various networks ie    onion the author has also proposed that this lays the groundwork for a future patch for getnodeaddresses that takes an argument of a specific network and returns only addresses in that networkbitcoin core  improves the signrawtransactionwithwallet rpc allowing it to sign inputs in transactions which have other signed inputs that are not owned by the wallet previously if the rpc was passed a transaction that had signed inputs not owned by the wallet the witnesses to those inputs would be broken in the returned transaction signing inputs in transactions with other signed inputs can be useful in a variety of situations including adding inputsoutputs to bump the transaction feelnd  adds support for making spontaneous atomic multipath payments also called original amps using the lowlevel sendtoroute rpc original amps are noninteractive or spontaneous by nature as the spender selects all preimages spender preimage selection is also a part of keysendstyle spontaneous payments which have been used for singlepath spontaneous payments followup prs are expected to make spontaneous multipath payments available to the higherlevel sendpayment rpclnd  allows the wallet to import  extended public keys xpubs and use them for receiving payments to lnd’s onchain wallet in combination with lnd’s recently updated support for psbts see newsletter  this allows lnd to operate as a watchonly wallet for its nonchannel funds for example alice can import the xpub from her cold wallet deposit funds into that wallet using an address lnd gives her request lnd open a channel sign a psbt opening that channel with her cold wallet and then have lnd automatically deposit funds back to her cold wallet when the channel is closed that last part—depositing closed channel funds back to a cold wallet—may require extra steps particularly in the case of noncooperatively closed channels but this change brings lnd most of the way towards being fully interoperable with psbtcompatible cold wallets and hardware walletsfootnotesif every block on the block chain had the same individual proof of work pow the valid chain with the most aggregate pow would also be the longest chain—the chain whose latest block had the greatest height yet seen however every  blocks the bitcoin protocol adjusts the amount of pow that new blocks need to contain increasing or decreasing the work needing to be proved in an attempt to keep the average time between blocks around  minutes that means it’s possible for a chain with fewer blocks to have more pow than a chain with more blocksbitcoin users use the chain with the most pow—not the most blocks—to determine whether they’ve received money when users see a valid variation on that chain where some of the blocks on the end have been replaced by different blocks they use that reorganized chain if it contains more pow than their current chain because the reorg chain may contain fewer blocks despite having more cumulative pow it’s possible for the height of the chain to decreasealthough this is a theoretical concern it’s usually not a practical problem decreasing height is only possible when a reorg crosses at least one of the retarget boundaries between one set of  blocks and another set of  blocks it also requires a reorg involving a large number of blocks or a recent major change in the amount of pow required indicating either a recent major increase or decrease of hash rate or an observable manipulation by miners in the context of  we don’t believe a reorg that decreased height would have any more impact on users during an activation than a more typical reorg ↩find the original post hereplease subscribe to the bitcoin optech newsletter directly to receive this content straight to your inbox every month