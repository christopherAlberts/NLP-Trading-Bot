this post originally appeared on medium and we republished with permission from xiaohui liuwe introduce a completely new way to designing smart contracts on bitcoin in all our previous contracts everything is embedded in bitcoin script and validated by miners in the new approach we combine previous contracting with transactionscontracts held and validated off chain surprisingly it can maintain the trustless nature of onchain contracts while being drastically more efficient and private we exemplify the general idea by improving a fair coin toss contractpractical fair coin tossusing a hashbased commitment scheme we introduced a contract to achieve fair coin toss without a trusted third party there is a caveat for it to be practical that is if one party learns the other’s secret and finds out she will lose she can simply abort even though ssh cannot get refundedtimed commitment schemeone approach to solve the aforementioned problem is using a timed commitment scheme tcs¹ the basic idea is to have a party deposit some fund which is refunded if he follows the protocol honestly and opens his commitment ie revealing his secret within a certain time if he aborts he forfeits the deposittcs operates in two phases commit phase alice creates  and locks some fund in a contract called timedcommit the fund can be spent in two ways  alice opens her secret and signs or  both alice and bob sign after time t she also signs  with timelock t and gives it to bob note bob validates alice’s signature locallyoffchain open phase before time t alice can redeem the fund by broadcasting  her secret and signature otherwise bob can take the fund by broadcasting  after tdisincentivize dropout in coin toss using tcsto discourage any party from aborting in the coin toss each has to pay some deposit during the setup phase in  the deposit has to be larger than the bet amount to be effective the resulting transaction graph² looks like the followingin the original setup transaction  there is only  output containing contract cointoss there are two additional outputs after tcs is introduced to disincentive both players from abortingnote that even though  transactions are created at most  will end up on chain due to bitcoin’s capability to prevent double spendgeneralizationthis above approach can be generalized to arbitrary types of contracts where security and fairness is desired when multiple distrusting parties want to conduct businesses without relying on a trusted third party smart contracts become a superset of smart contract we have introduced before which purely consists of computer code run and validated by miners ie scriptscrypt they can also include transactions kept offchain and business logic validated offchain they are more akin to protocol designs in the domain of computer networking eg  way handshake in tcp and cryptography eg diffie–hellman key exchange measures can be taken to ensure secure and fair protocol execution even in the presence of adversaries and offchain validationretaining the trustless benefit of onchain smart contracts aka  smart contracts designed this way aka  enjoy salient advantages it is also noteworthy bitcoin’s utxo model is amenable for this way of contracting and it would be difficult if not impossible to achieve the same using an account modelefficiencyin the toy example we save  out of  transactions a  reduction of onchain transactions we expect more significant transaction fee savings in practical applications where the transaction graph is much larger for example when it degenerates to a binary tree of depth n as in the following graph only log n transactions have to be finalized on chain in red arrow instead of nprivacysince only a subset of transactions are settled on chain anyone who only watches the blockchain may not obtain full information to figure out what is going on at the same time parties involved in the contract can keep all transactions including ones not appearing on chain this increases privacy while retaining the ability to recourse if necessarythis is only the first of many  contract examples to come stay tuned andrychowicz marcin  dziembowski stefan  malinowski daniel  mazurek łukasz  fair twoparty computations via bitcoin deposits – –––– bitcoin class the traveling salesman problem and the transaction dagnew to bitcoin check out coingeek’s bitcoin for beginners section the ultimate resource guide to learn more about bitcoin—as originally envisioned by satoshi nakamoto—and blockchain