the bitcoin optech newsletter provides readers with a toplevel summary of the most important technical news happening in bitcoin along with resources that help them learn more to help our readers stay uptodate with bitcoin were republishing the latest issue of this newsletter below remember to subscribe to receive this content straight to your inboxthis week’s newsletter describes a security disclosure affecting protocols depending on a certain  optin replace by fee behavior and includes our regular sections with the summary of a bitcoin core pr review club meeting announcements of new software releases and release candidates and descriptions of notable changes to popular bitcoin infrastructure softwarenews discrepancy between  and bitcoin core implementation the  specification of optin replace by fee rbf says that an unconfirmed parent transaction that signals replaceability makes any child transactions that spend the parent’s outputs also replaceable through inferred inheritance this week antoine riard posted to the bitcoindev mailing list the full disclosure of his previously privately reported finding that bitcoin core does not implement this behavior it is still possible for child transactions to be replaced if they explicitly signal replaceability or for them to be evicted from the mempool if their parent transaction is replacedriard analyzed how the inability to use inherited replaceability might affect various current and proposed protocols only ln appears to be affected and only in the sense that an existing attack see newsletter  that uses pinning becomes cheaper the ongoing deployment of anchor outputs by various ln implementations will eliminate the ability to perform that pinningas of this writing there has not been any substantial discussion of the issue on the mailing listriard analyzed how the inability to use inherited replaceability might affect various current and proposed protocols only ln appears to be affected and only in the sense that an existing attack see newsletter  that uses pinning becomes cheaper the ongoing deployment of anchor outputs by various ln implementations will eliminate the ability to perform that pinning as of this writing there has not been any substantial discussion of the issue on the mailing list call for brink grant applications bitcoin optech encourages any engineer contributing to open source bitcoin or lightning projects to apply for a brink grant before the application deadline on may  initial grants are one year long and allow developers to work full time on open source projects from anywhere in the worldbitcoin core pr review clubin this monthly section we summarize a recent bitcoin core pr review club meeting highlighting some of the important questions and answers click on a question below to see a summary of the answer from the meetingintroduce node rebroadcast module is a pr  by amiti uttarwar that continues work on the rebroadcast project see newsletters    and  previously discussed in review clubs  and  whose goal is to make node rebroadcast behavior for wallet transactions indistinguishable from that of other peers’ transactionsthe review club discussion focused on current transaction behavior and the proposed changeswhy might we want to rebroadcast a transaction when our transaction didn’t propagate perhaps our node was offline or appears to have been dropped by other nodes’ mempools in the networkwhy does a node drop a transaction from its mempool apart from being included in a block a transaction can expire after  days be squeezed out of a node’s limited mempool size default size  mib by higherfee transactions be replaced via  optin replacebyfee rbf be removed if a conflicting transaction is included in a block or be included in a block that is later reorged out in which case the node will try to readd it while updating the mempool to be consistent again after the reorgwhat could be an issue with the current behavior of each wallet being responsible for rebroadcasting its own transactionsthis can be a privacy leak that allows linking the ip address to the wallet address as under the current rebroadcasting behavior a node that broadcasts a transaction more than once is essentially announcing that the transaction is from its walletthis can be a privacy leak that allows linking the ip address to the wallet address as under the current rebroadcasting behavior a node that broadcasts a transaction more than once is essentially announcing that the transaction is from its wallet when might a miner exclude a transaction that is in our mempool when the miner deprioritized it for having a low fee didn’t see it yet removed it from its mempool by rbf censored it or mined an empty blockwhen might a miner include a transaction that is not in our mempool when the miner manually prioritized the transaction eg as a commercial service received it before our node or the transaction conflicted with another one in our mempool but not in theirshow would the proposal under review decide which transactions to rebroadcastonce per new block it proposes to rebroadcast transactions above an estimated feerate that are at least  minutes old have been rebroadcast no more than  times and not more recently than  hours ago with up to  of the transactions that fit the blockonce per new block it proposes to rebroadcast transactions above an estimated feerate that are at least  minutes old have been rebroadcast no more than  times and not more recently than  hours ago with up to  of the transactions that fit the block why might we want to keep a transaction in our rebroadcast attempt tracker even after it has been removed from our mempoolafter a consensus rule change there can be nonupdated nodes on the network rebroadcasting transactions that don’t meet the new consensus rules keeping transactions in the rebroadcast attempt tracker would avoid these nodes rebroadcasting them too many times a maximum of  times over  days and allow the transactions to expireafter a consensus rule change there can be nonupdated nodes on the network rebroadcasting transactions that don’t meet the new consensus rules keeping transactions in the rebroadcast attempt tracker would avoid these nodes rebroadcasting them too many times a maximum of  times over  days and allow the transactions to expire when would we remove a transaction from our rebroadcast attempt tracker when the transaction is confirmed rbfed or conflicts with another transaction included in a blockhow would the estimated minimum feerate for rebroadcast be calculated why not use the lowest feerate in the last mined blockthe rebroadcast feerate floor would be estimated once a minute by assembling a block from the mempool to simulate inclusion in the next mined block this approach is better than using the lowest feerate of the last mined block because it calculates fees based on the immediate future in a changing environment instead of based on the pastreleases and release candidatesnew releases and release candidates for popular bitcoin infrastructure projects please consider upgrading to new releases or helping to test release candidatesrustlightning  is a new release that makes rust lightning more compatible with getting data from electrumstyle servers adds additional configuration options and improves compliance with the ln specification among other bug fixes and improvementsnotable code and documentation changesnotable changes this week in bitcoin core clightning eclair lnd rustlightning  hardware wallet interface hwi rust bitcoin btcpay server bitcoin improvement proposals bips and lightning boltsbitcoin core  increases the number of keys that can be included in multisig descriptors and used in the addmultisigaddress and createmultisig rpcs from  to  the increased limit can only be used in  outputs  outputs are limited to  byte scripts which are only large enough to hold  compressed public keysbitcoin core gui  enables users to adjust the autoprune block space size from the default in the intro dialog it also adds an improved description for how the pruned storage works clarifying that the entire blockchain must be downloaded and processed but will be discarded in the future to keep disk usage lowclightning  adds a funder plugin for configuring dualfunding contribution behavior in response to incoming channel open requests users will be able to specify a general contribution policy percent match percent available funds or fixed contribution a wallet reserve amount under which no dualfunding contributions will happen a maximum contribution amount for any single channel open request and morethis pr represents the last step in enabling experimental dualfunding support between clightning nodes the interactive transaction construction and channel establishment  protocols arising out of this work is still being standardized in the open bolts  prthis pr represents the last step in enabling experimental dualfunding support between clightning nodes the interactive transaction construction and channel establishment  protocols arising out of this work is still being standardized in the open bolts  pr clightning  adds the ability for plugins to register topics about which they plan to publish notifications other plugins can subscribe to those topics to receive notifications clightning already had several builtin topics but this merged pr allows plugin authors to create and consume notifications for any new topic category they’d like to userust bitcoin  starts the process of implementing support for taproot with schnorr signatures the existing ecdsa support is moved to a new module but continues to be exported under existing names to preserve api compatibility a new utilschnorr module adds support for  schnorr key encodings issue  is being used to track the complete implementation of taproot compatibilityfind the original post hereplease subscribe to the bitcoin optech newsletter directly to receive this content straight to your inbox every month