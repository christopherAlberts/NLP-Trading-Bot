the bitcoin optech newsletter provides readers with a toplevel summary of the most important technical news happening in bitcoin along with resources that help them learn more to help our readers stay uptodate with bitcoin were republishing the latest issue of this newsletter below remember to subscribe to receive this content straight to your inboxthis week’s newsletter announces a change of networks for several irc channels and celebrates optech’s  newsletter also included are our regular sections with popular questions and answers from the bitcoin stack exchange new software releases and release candidates and notable changes to popular bitcoin infrastructure projectsnewsirc channels moving to liberachat in the weekly bitcoin core developer meeting it was decided that the meeting on thursday may  will be the last meeting held on the freenode network bots logging other infrastructure future meetings and general discussion will be moved to bitcoincoredev on the liberachat network actions by the freenode administrators occurring shortly before publication of this newsletter seem to have forced the move to occur early wednesday morning utc several other channels related to bitcoin and ln are also moving for help finding the current network for various channels see the bitcoin wiki’s list of irc channels if you operate a channel that’s moving and don’t have a wiki account to update that list yourself please let the editors know in bitcoinwiki on liberacelebrating optech newsletter by john newbery founder optechthis is the  regular optech weekly newsletter that we’ve written for the bitcoin technical community pausing only for short breaks around the christmas holidays we’ve published digests of the most important events in bitcoin and lightning development every week since june optech was started with some very simple goals to help bitcoin businesses adopt technologies that allow bitcoin to scale and to highlight the amazing technical work happening in the open source bitcoin community although we couldn’t foresee exactly what form that would take three years ago it’s a mission that we continue to believe in and that guides all the work we do since june  we’vepublished  newsletters numerous blog posts and field reports a special series on  and an interactive taproot workshop in total we’ve published around  words – enough to fill around  printed pagesreached  email subscribers and almost  twitter followersstarted seeing some of our newsletters translated into japanese and spanish by members of the communityproduced and maintained a topics index – a single location where readers can track the evolution of bitcoin and lightning proposals and improvementsthe newsletters are the work of many contributors foremost amongst them is dave harding who writes the majority of our content to say that dave is prolific is an understatement – week after week he produces concise clear summaries of the enormously varied research and development happening across the bitcoin ecosystem we’re lucky to have someone of his breadth of knowledge dedication and humility documenting bitcoin the extensive body of work that he’s produced for optech and other projects is a huge asset for all present and future bitcoinersthe supporting roles are filled by other optechers mike schmidt writes our regular sections on stack exchange qas and notable changes to bitcoin software and infrastructure and makes sure that the newsletter arrives in everyone’s inbox on time jon atack contributes our regular summary of bitcoin core pr review club as well as mike and jon carl dong adam jonas mark erhardt and i contribute occasional pr summaries and review each week’s newsletter to try to ensure the content we produce is accurate and clearspecial thanks to shigeyuki azuchi who translates our newsletters into japanese and akio nakamura who has also translated and reviewed our japanese materialthanks to all the members of the bitcoin community – too numerous to name individually – who have reviewed our newsletters helped us understand concepts and opened issues and prs when we’ve made mistakesall of this work is made possible by our generous supporters primarily our founding sponsors  wences casares john pfeffer and alex morcosfinally thank you our readers we love being part of this community and contributing to this ecosystem knowing how valuable this resource is to so many people and hearing feedback from our readers is hugely rewarding for us if you want to contribute or have suggestions for how we can improve please don’t hesitate to contact us at infobitcoinopsorgselected qa from bitcoin stack exchangebitcoin stack exchange is one of the first places optech contributors look for answers to their questions—or when we have a few spare moments to help curious or confused users in this monthly feature we highlight some of the topvoted questions and answers posted since our last updatereleases and release candidatesnew releases and release candidates for popular bitcoin infrastructure projects please consider upgrading to new releases or helping to test release candidateseclair  is a new release that with several improvements that enhance user security and privacy it also provides compatibility with future software that may use taproot addresseslnd  is a release candidate that adds support for using a pruned bitcoin full node allows receiving and sending payments using atomic multipath amp and increases its psbt capabilities among other improvements and bug fixesnotable code and documentation changesnotable changes this week in bitcoin core clightning eclair lnd rustlightning  hardware wallet interface hwi rust bitcoin btcpay server bitcoin improvement proposals bips and lightning boltsbitcoin core  adds a network argument to the getnodeaddresses rpc when getnodeaddresses is called with this argument set to a supported network type   onion or  it will only return known addresses on the specified network when called without the network argument getnodeaddresses will return known addresses from all networkseclair  makes it mandatory for peers to signal and comply with the paymentsecret feature bit the payment secrets feature thwarts a recipient deanonymization attack and provides additional protection against improper image revelation the feature is supported across all major implementations and is mandatory for payments to lnd and rustlightningeclair  extends java’s builtin securerandom csprng function with a secondary source of weaker randomness the weaker randomness is hashed and the hash digest xored with the primary randomness so that even if securerandom produces predictable results due to some bug discovered in the future there’s a chance eclair will continue to have enough entropy so that its cryptographic operations remain unexploitablebips  assigns  to a proposal previously discussed on the mailing list for creating a standardized set of  paths for multisig wallets regardless of their multisig parameters what address type they use or other scriptlevel details instead users of the proposed standard store those details in an output script descriptor this eliminates the need for wallets to implement multiple different standards for slight variations on multisig eg  and the  standard or create new standards for things that can be handled by descriptors although using a descriptor rather than a standardized script does mean more data needs to be backed up the actual difference is small—most of the data in a typical multisig descriptor will be the extended public keys xpubs that need to be backed up by each party to a multisig anyway so the additional information about the script template and the descriptor’s checksum only add a small amount of overhead by comparisonbips  assigns  to the standardized format described in newsletter  for describing what  key derivation paths a wallet should support path templates provide a compact way for the user to specify which paths they want to use the compactness of path templates makes it easy to back up the template along with the seed helping prevent users from losing funds an additional feature of the proposed path templates is the ability to describe derivation limits eg that a wallet should derive no more than  keys in a particular path which can make it practical for a recovery procedure to scan for bitcoins received to all possible wallet keys eliminating concerns about gap limits in hd walletsbips  assigns  to the bitcoin secure multisig setup bsms described in newsletter  which explains how wallets particularly hardware signing devices can securely exchange the information necessary to become signers for a multisig wallet the information that needs to be exchanged includes the script template to use eg  with  keys required to sign and each signer’s  extended public key xpub at the key path it plans to use for signing the protocol uses a coordinator to collect the required information and create an output script descriptor which the individual signers then verify to ensure it properly includes their keyfind the original post hereplease subscribe to the bitcoin optech newsletter directly to receive this content straight to your inbox every month